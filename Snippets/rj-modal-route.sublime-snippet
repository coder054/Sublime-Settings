<snippet>
<content><![CDATA[
//////////////////////////////////////////////////////////////////
class ModalSwitch extends Component {
  // We can pass a location to <Switch/> that will tell it to
  // ignore the router's current location and use the location
  // prop instead.
  //
  // We can also use "location state" to tell the app the user
  // wants to go to `/img/2` in a modal, rather than as the
  // main page, keeping the gallery visible behind it.
  //
  // Normally, `/img/2` wouldn't match the gallery at `/`.
  // So, to get both screens to render, we can save the old
  // location and pass it to Switch, so it will think the location
  // is still `/` even though its `/img/2`.
  previousLocation = this.props.location

  componentWillUpdate(nextProps) {
    let { location } = this.props

    // set previousLocation if props.location is not modal
    if (
      nextProps.history.action !== 'POP' &&
      (!location.state || !location.state.modal)
    ) {
      this.previousLocation = this.props.location
    }
  }

  render() {
    let { location } = this.props
    let isModal = !!(
      location.state &&
      location.state.modal &&
      this.previousLocation !== location
    ) // not initial render

    return (

{/*      <Switch location={isModal ? this.previousLocation : location}>
          <Route exact path="/" component={Home} />
          <Route path="/gallery" component={Gallery} />*/}
          {isModal ? <Route path="/img/:id" component={ModalView} /> : null}
          <Route path="/img/:id" component={NormalView} />
        {/*</Switch>*/}
        
    )
  }
}

function ModalView({ match, history }) {
  let image = IMAGES[parseInt(match.params.id, 10)]

  if (!image) return null

  let back = e => {
    e.stopPropagation()
    history.goBack()
  }

  return (
    <div
      onClick={back}
      style={{
        position: 'absolute',
        top: 0,
        left: 0,
        bottom: 0,
        right: 0,
        background: 'rgba(0, 0, 0, 0.15)'
      }}>
      <div
        className="modal"
        style={{
          position: 'absolute',
          background: '#fff',
          top: 25,
          left: '10%',
          right: '10%',
          padding: 15,
          border: '2px solid #444'
        }}>
        <h1>{image.title}</h1>
        <Image color={image.color} />
        <button type="button" onClick={back}>
          Close
        </button>
      </div>
    </div>
  )
}
//////////////////////////////////////////////////////////////////
]]></content>
<tabTrigger>rj-modal-route</tabTrigger>
<description>rj-modal-route</description>
<scope>source.js, comment.line.double-slash.js, punctuation.definition.comment.js</scope>
</snippet>