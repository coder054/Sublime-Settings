<snippet>
<content><![CDATA[
// rdip
import { bindActionCreators } from 'redux'
import { connect } from 'react-redux'

// import actions
import {
  increment,
  decrement,
  testt
} from '../../modules/modulename'

-> mapDispatchToProps rdmdp -> mapStateToProps rdmst -> connect(
  mapStateToProps,
  mapDispatchToProps
)(Component) rdcn


//store.js
import { createStore, applyMiddleware, compose } from 'redux'
import { connectRouter, routerMiddleware } from 'connected-react-router'
import thunk from 'redux-thunk'
import createHistory from 'history/createBrowserHistory'
import rootReducer from './modules'

export const history = createHistory()

const initialState = {}
const enhancers = []
const middleware = [thunk, routerMiddleware(history)]

if (process.env.NODE_ENV === 'development') {
  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__

  if (typeof devToolsExtension === 'function') {
    enhancers.push(devToolsExtension())
  }
}

const composedEnhancers = compose(
  applyMiddleware(...middleware),
  ...enhancers
)

export default createStore(
  connectRouter(history)(rootReducer),
  initialState,
  composedEnhancers
)


// index.js
import React from 'react'
import { render } from 'react-dom'
import { Provider } from 'react-redux'
import { ConnectedRouter } from 'connected-react-router'
import store, { history } from './store'
import App from './containers/app'

import 'sanitize.css/sanitize.css'
import './index.css'

const target = document.querySelector('#root')

render(
  <Provider store={store}>
    <ConnectedRouter history={history}>
      <div>
        <App />
      </div>
    </ConnectedRouter>
  </Provider>,
  target
)

]]></content>
<tabTrigger>rd-setup-tomtat</tabTrigger>
<description>a</description>
<scope>source.js, comment.line.double-slash.js, punctuation.definition.comment.js</scope>
</snippet>